<% include header %>

<%
    //renderされた配列を逆順にして取得
    var todoData = todos.reverse()
    var listData = lists.reverse()
%>


<p>新しいToDoリストを作成する</p>
<!-- ToDo入力フォームを作成する-->
<div class="form">
    <form id="form">
        <p>新しくToDoを作成する</p>
        <p>
            <label for="text">リスト</label>
            <input id="listText" type="text" name="text" maxlength='30'>
        </p>
        <p>
            <input type="submit" value="リストの作成">
        </p>
    </form>
</div>

<!-- ToDo一覧を表示する-->
<%
//checkboxの◯個中◯個チェック済み
    //resultという空のオブジェクトを作る
    var result = {};
    //todoValuesという、「todoの数」、「そのうちチェックされた数」、「一番迫っている期限」の3種類の値を入れる空の配列を作る
    var todoValues = [];
    //現在の日時を取得
    var nowTime = new Date()
    listData.forEach(function(list){
        //keyがlistの連想配列を作る
        result[list] = [];
        todoData.forEach(function(todo) {
        //リストとtodoのlistnameが等しい場合
        if(todo.listname === list.listname) {
        //listとその中に含まれるtodoを一致させる
        result[list].push(todo);
        }
        });
        //checkされている数に初期値0を代入しておく
        var checkCount = 0;
        //あるリストに含まれるtodoの数
        var todoCount = result[list].length;
        //dataValuesというdateを入れる空の配列を作る
        var dateValues = [];
        result[list].forEach(function (checked) {
            if(checked.isCheck) {
                //checkされていたらcheckCountを1足す
                checkCount++;
            }
            //date型としてchangeDateに代入
            var changedDate = new Date(checked.limitDate);
            //date型を数値に変換して、現在日時と期日の差を出す
            var subtraction = Math.abs(changedDate.getTime() - nowTime.getTime());
            //nullとNaNを排除する
            if (subtraction != null && !isNaN(subtraction)) {
                //現在日時と期日の差の配列
                dateValues.push(subtraction);
            }
        });
        //現在日時と期日の差の配列の中から最も小さい値のindexを取り出す
        var min = Math.abs(dateValues.indexOf(Math.min.apply(null, dateValues)));
        //取得したindex番号の数値を元にdate型に変換する
        var minDate = new Date(dateValues[min] + nowTime.getTime());
        //3種類の値をハッシュにして配列に追加していく
        todoValues.push({
                todoCount: todoCount,
                checkCount: checkCount,
                date: minDate
        })
    });
%>


<% for (var i=0;i<listData.length;i++){
%>
<% for (var i=0;i<listData.length;i++) {%>

<div id="textDetail">
    <h2 class="text"><p class="todoList"><a href="/getTodoHtmlPage/<%=listData[i].listname%>"><%=listData[i].listname%></a></p></h2>
    <p class="finish"><%= todoValues[i]['todoCount'] %>個中<%= todoValues[i]['checkCount']%>個がチェック済み%></p>
    <p class="Deadline">~<%= todoValues[i]['date'].toLocaleString() %></p>
</div>

<%
}
} %>

<!--<div class="list"></div>-->
<div class="checks"></div>
<script src="http://code.jquery.com/jquery-2.0.0.min.js"></script>
<script src="../javascripts/index.js"></script>

<% include footer %>